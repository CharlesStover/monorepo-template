name: Module push

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install

  eslint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install
      - name: Lint
        run: yarn module:eslint

  jest:
    needs: install
    runs-on: ubuntu-latest
    # services:
    #   datadog-agent:
    #     image: datadog/agent:latest
    #     env:
    #       DD_API_KEY: ${{ secrets.DATADOG_API_KEY }}
    #       DD_HOSTNAME: none
    #       DD_INSIDE_CI: true
    #     ports:
    #       - 8126:8126
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install
      - name: Unit test
        run: yarn module:jest

  rollup:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install
      - name: Build
        run: yarn module:rollup
      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: rollup
          path: dist

  github:
    needs: [eslint, jest, rollup]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
          registry-url: 'https://npm.pkg.github.com/'
          scope: '@{{ github.repository_owner }}'
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: rollup
          path: .
      - name: Publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          yarn config set npmAuthToken $NPM_AUTH_TOKEN;
          yarn npm publish --tolerate-republish;

  npm:
    needs: [eslint, jest, rollup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: rollup
          path: .
      - name: Publish
        run: >
          yarn config set npmAuthToken $NPM_AUTH_TOKEN;
          yarn npm publish --tolerate-republish;
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

on:
  push:
    branches: [main]
    paths: 'packages/module/**/*'
